{"version":3,"sources":["useDropdown.js","Pet.js","Results.js","SearchParams.js"],"names":["useDropdown","label","defaultState","options","state","updateState","id","replace","toLowerCase","e","target","value","length","map","item","Pet","props","name","animal","breed","media","location","hero","small","Results","pets","pet","type","breeds","primary","photos","contact","address","city","SearchParams","theme","setTheme","ThemeContext","updateLocation","updateBreeds","setPets","AnimalDropdown","ANIMALS","BreedDropdown","updateBreed","then","breedStrings","console","error","preventDefault","requestPets","animals","log","backgroundColor"],"mappings":"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","file":"SearchParams.40aebb4d.js","sourceRoot":"..\\src","sourcesContent":["import React, { useState } from \"react\";\n\nconst useDropdown = (label, defaultState, options) => {\n  const [state, updateState] = useState(defaultState);\n  const id = `use-dropdown-${label.replace(\" \", \"\").toLowerCase()}`;\n  const Dropdown = () => (\n    <label htmlFor={id}>\n      {label}\n      <select\n        id={id}\n        value={state}\n        onChange={e => updateState(e.target.value)}\n        onBlur={e => updateState(e.target.value)}\n        disabled={!options.length}\n      >\n        <option />\n        {options.map(item => (\n          <option key={item} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n  return [state, Dropdown, updateState];\n};\n\nexport default useDropdown;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst Pet = props => {\n  const { name, animal, breed, media, location, id } = props;\n\n  let hero = \"http://placecorgi.com/300/300\";\n  if (media.length) {\n    hero = media[0].small;\n  }\n\n  return (\n    <Link to={`/details/${id}`} className=\"pet\">\n      <div className=\"image-container\">\n        <img src={hero} alt={name} />\n      </div>\n      <div className=\"info\">\n        <h1>{name}</h1>\n        <h2>{`${animal} — ${breed} — ${location}`}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default Pet;\n","import React from \"react\";\nimport Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n  return (\n    <div className=\"search\">\n      {!pets.length ? (\n        <h1>No Pets Found</h1>\n      ) : (\n        pets.map(pet => {\n          return (\n            <Pet\n              animal={pet.type}\n              key={pet.id}\n              name={pet.name}\n              breed={pet.breeds.primary}\n              media={pet.photos}\n              location={`${pet.contact.address.city}, ${\n                pet.contact.address.state\n              }`}\n              id={pet.id}\n            />\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport pet, { ANIMALS } from \"@frontendmasters/pet\";\nimport useDropdown from \"./useDropdown\";\nimport Results from \"./Results\";\nimport ThemeContext from \"./ThemeContext\";\n\nconst SearchParams = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n  const [location, updateLocation] = useState(\"Seattle, WA\");\n  const [breeds, updateBreeds] = useState([]);\n  const [pets, setPets] = useState([]);\n  const [animal, AnimalDropdown] = useDropdown(\"Animal\", \"dog\", ANIMALS);\n  const [breed, BreedDropdown, updateBreed] = useDropdown(\"Breed\", \"\", breeds);\n\n  async function requestPets() {\n    const { animals } = await pet.animals({\n      location,\n      breed,\n      type: animal\n    });\n\n    console.log(\"animals\", animals);\n\n    setPets(animals || []);\n  }\n\n  useEffect(() => {\n    updateBreeds([]);\n    updateBreed(\"\");\n\n    pet.breeds(animal).then(({ breeds }) => {\n      const breedStrings = breeds.map(({ name }) => name);\n      updateBreeds(breedStrings);\n    }, console.error);\n  }, [animal]);\n\n  return (\n    <div className=\"search-params\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          requestPets();\n        }}\n      >\n        <label htmlFor=\"location\">\n          Location\n          <input\n            id=\"location\"\n            value={location}\n            placeholder=\"Location\"\n            onChange={e => updateLocation(e.target.value)}\n          />\n        </label>\n        <AnimalDropdown />\n        <BreedDropdown />\n        <label htmlFor=\"location\">\n          Theme\n          <select\n            value={theme}\n            onChange={e => setTheme(e.target.value)}\n            onBlur={e => setTheme(e.target.value)}\n          >\n            <option value=\"peru\">Peru</option>\n            <option value=\"darkblue\">Dark Blue</option>\n            <option value=\"chartreuse\">Chartreuse</option>\n            <option value=\"mediumorchid\">Medium Orchid</option>\n          </select>\n        </label>\n        <button style={{ backgroundColor: theme }}>Submit</button>\n      </form>\n      <Results pets={pets} />\n    </div>\n  );\n};\n\nexport default SearchParams;"]}